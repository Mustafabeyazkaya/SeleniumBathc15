*********************Selenium Class04**********************

-----Revise--------
Locators:
 1.ID
 2.Name
 3.Class name
 4.LinkText--> they can only be used with a link (that it must have a link tag <a> and it must have a text)
 5.Xpath
 6.Css
 7.TagName
 8.Partial Link text--> they can only be

 Element Commands:

 1. clear();
 2.getText();
 3.getAttribute();

 ------------------------CSS------------------------------

 1. get an Element using CSS selector

        a. syntax:
            tagname[attribute = 'attribute value']

the beauty about CSS selector is that instead of writing the full syntax you can also use shortcuts

classname -->instead of this tagname[classname='value'], you can write "tagname.value" --> .

ID       -->instead of this tagname[id='value'],  you can write   "tagname#value"       --> #

Note;
      In CSS selector , we don't have this option of getting an element by TEXT (text())

      but CSS has this contains method that can be used
                            Syntax: for contains method for CSS
                            tagname[attribute *= 'partial attribute value']    Where * means contains here

              Css has some other amazing features to like
                            stars-with method in css:
                                tagname[attribute ^='starting attribute value'] where ^ means stars with

                                example: <input id="abra ca dabra hello" , email="rote"/>

                                     input[id ^='abra']

         b. nds-with method in css:
                    $ symbol represent ends-with method in css

                Syntax:
                    tagname[attribute $='ending attribute value']

                 Example:
                    <input id="abra ca dabra hello" , email="rote"/>

                    write the CSS selector using ends with method:
                        input[id $= 'lo']    // or hello or ello or llo,  you can write


Approach to select the radio button:

1. locate the webElement in the Dom
2.





-----------Revision------------
1. Locators:
8 locators we know
1.ID
2.name
3.className
4.partial link text
5.Linktext
6.css
7.xpath
8.Tagname

WebElement Commands:
1. .clear()
2. .getText() --> help us to get text of element
3. .getAttribute() --> help us to get value of a particular attribute
4. isSelected() --> to check if the element is checked (clicked) or not
5. isDisplayed() --> is it there on the screen or not
6. isEnabled() --> is it clickable or are we able to send text to it incase of a text box


1. Radio ButtonS:
Select a radio button
approach:
1. open the dom and inspect it
2. write down the correct locator that wll select it
3. find that using driver.findElement in your code
4. just simply click on it

Logic Building

a scenario:
lets assume there are 4 radio buttons and you wanna select the one that says "5 -15"

1. inspect the radio button which you want to select i.e 5 -15
2. write down the correct locator that selects the webElement 5 -15
3. find the webElement using driver.findElement through code
4. just simply click on it

is this a very good approach??
no it is not a good approach, because in the future, if we want to select 0- 15 or ay other value it will be a hustle

so what s the better approach
\
1. inspect the webELement of interest  (4 radio button) and find the in the dom
2. write the locator in such a way that it selects all those 4
3. find all those elements in the code using driver.findElements
4. loop throght the list and get each WebELEMENT ONE BY ONE
5. WHENEVER WHILE ITERATING YOU GO THROUGH FIGURE OUT WHICH ATTRIBUTE MIGHT HELP YOU IN DETECTING IT IS YOUR DESIRED onee (by inspecting the variable in DOM)
6. if you get your desired use if else to click on it

will the above approach work for this task??



Moazzam:
****************Selenium Class04****************

----------------Revise--------------------------

Locators:

XPath
CSS


Element Commands:

1. clear()
2..getText()
3 .Getattribute()



----------------------------------------------CSS----------------------------

1. get an Element using CSS selector

     	a. syntax :
				tagname[attribute = 'attribute value']


the beauty about CSS selector is that instead of wiritng the full syntax u can also use shortcuts

 classname ---> tagname [classname='value']  u can write  "tagname.value"   --->   .

 ID      ---->  tagname [id='value']  u can write        "tagname#value"    --->  #



Note:

     In css selector we donot have this option of getting an element by TEXT



     but CSS has this contains method that can be used
     					 Syntax: for contains method for css

     					 tagname[attribute *= 'partial attribute value']   where  * means contains here

       CSS has someother amazing features to like
       					a.starts-with method in css:
       					     tagname[attribute ^= 'starting attribute value'] where ^ means starts with

       					     example:  <input id="abra ca dabra hello" ,email ="rote"/>
       					     CSS using starts with method:

       					       			input[id ^= 'abra ca dab']


       					b.ends-with method in css:
								$ symbol represents ends-with method in css
							Syntax:
								tagname[attribute $= 'ending attribute value']

								Example:
									example: <input id="abra ca dabra hello" ,email ="rote"/>

									write the CSS selector using ends with method:
									 input[id $= 'hello']



---------------------------------------------------------------------------------


Approach to select the radio button:

1. locate the webElement in the DOM
2. write the appropriate locator to select it
3. use driver.findElement to find that in your code
4. click on it





isEnabled()--> check if the radio button can be selected or not  (if not selectable usually it is greyed out.
isDisplayed() --> checks if the webElment is displayed on the page or not
isSelected()-->checks if the radio button is selected or not (return true if selected)







-----------------------------Revision-----------------------------------------

1.Locators:

8 locators

1.id
2.name
3.className
4.partial link text
5.link text
6.css
7.xpath
8.Tagname




WebElement Commands:

1.clear()
2.getText()---> get the text
3.getattribute()--> get the value of a particular attribute
4. isselected()--> to check if the element is checked (clicked ) ir not
5. isdisplayed() --> is it there on the screen or not
6. isEnabled()  ---> is it clickable or are we able to send text to it incase of a text box




1. Radio buttons:

Select a radio button

approach:

1.open the dom and inspect it
2. write down the correct locator that will select it
3. find that using driver.findelement in your code
4. just simply click on it



logic building

a scenario:

lets assume there are "4" radio buttons and u wanna select the one that says "5 -15"
1.inspect the radio button that u wanna selct i.e 5 -15
2.write down the correct locator that selects the webElemtn 5 - 15
3. find the WebElment using driver.findElement through code
4. just simply click on it


is this a very good approach?????
no it is not a very good appproach becuase in future if we want slect 0 -15 or any other value it will be a hustle


so whats the better approach

1.inspect the webElment of interest  (4 radio buttons) and find the in the dom
2. write the locator in such a way that it selects all those 4
3.find all those elements in the code using driver.findElements
4. loop throght the list and get each WebElment one by one
5. whenever while iterating u go through  figure out which attribute might help u in detecting it is your desired one (by inspecting the variable in DOM)
5. if u get your desired use if else to click on it.